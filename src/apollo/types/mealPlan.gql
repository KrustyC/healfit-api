# type MealEventRecipe {
#   id: ID
#   slug: String
#   title: String
#   picutre: String
# }

type MealEvent {
  id: ID
  startTime: Date
  endTime: Date
  mealType: String
  recipes: [Recipe]
  owner: Account
}

type WorkoutEvent {
  id: ID
  startTime: Date
  endTime: Date
  mealType: String
  recipes: [Recipe]
  owner: Account
}

# INPUT
input MealEventAddInput {
  startTime: Date!
  endTime: Date!
  recipes: [ID]!
  mealType: string!
}

input WorkoutEventAddInput {
  startTime: Date;
  endTime: Date;
}

input MealPlanRangeInput {
  startDay: Date!
  endDay: Date!
}

type Query {
  findWithinRange(input: MealPlanRangeInput!): [MealEvent | WorkoutEvent]
}

type Mutation {
  addMealEvent(input: MealEventAddInput!): MealEvent
    @auth(role: USER)
  addWorkoutEvent(input: WorkoutEventAddInput!): WorkoutEvent
    @auth(role: USER)
  # deleteRecipe(id: ID!): Boolean @auth(role: USER)
}